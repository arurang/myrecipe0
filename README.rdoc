testing specs for recipes:

name:string
summary:text
description:text

-name must be present
- name must be 5 characters and less than 100 charaters
-summary must be present 10 and less than 150 charaters
-description must be present
-description must be between 20 and 500 charaters
-chef_id must be present


testing specs for recipes:
chefname: string
email: string

-chefname must be present
-chefname must be between 3 charaters and less than 40 charaters
-email must be present
-email must be unique( since we 'll use this for logins later)
-email must be vaild


Chefs:

What we have already:
-Chef model and vaildations
-chef table with colums chefname and email

What we need to do:
-Add passwords to the chefs table so chefs can be authenticated and logged in
-Use email as log in credentials, since email is unique
-Abilty to register new chefs to use the app
-Ablity to display chefs profile
-Ablity for chefs to log in and logout of the app
-Restrict actions like create recipe, edit recipe and like feature to logged in chefs only
-Restricting edit of recipes by chefs who created the recipes



Authentication updates:

1) Show recipe page -> Ablity to edit/update only own recipe
2) Navigation partial -> Toggle Menu, Restrict new
3)Restrict thumbs up and thumbs down action to logged_in users only
4)Recipe - Update to current_user
5)Like - update to current_user
6)Before_action :require_user, except: [:show, :index]
7)Before_action :require_same_user for chefs, only: [:edit, :update]


Many to Many Association:

1.We will implement using has_many through association
2.Requires a join table
3.One object/row in one table can be associated with multiple rows in a 2nd table and vice-versa


-Add Admin Functionality
